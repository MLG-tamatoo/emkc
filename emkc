#!/usr/bin/env bash

function init_logs {
    touch var/docker/logs/app.log
    chmod 777 var/docker/logs/app.log
    touch var/docker/logs/sql.log
    chmod 777 var/docker/logs/sql.log
}

case $* in
    init )
        cp -n platform/config/local.js.sample platform/config/local.js
        cp -n platform/migrations/config.json.sample platform/migrations/config.json
        init_logs
        docker-compose build
        docker-compose run --rm --no-deps emkc bash -c 'cd /opt/emkc/platform; npm install'
        ;;
    deploy )
        git pull
        docker-compose down
        init_logs
        docker-compose up -d
        ;;
    start )
        init_logs
        docker-compose up -d
        ;;
    stop )
        docker-compose down
        ;;
    shell )
        docker exec -it emkc /bin/bash
        ;;
    rebuild )
        docker-compose build
        ;;
    npm )
        docker-compose run --rm --no-deps emkc bash -c 'cd /opt/emkc/platform; npm install'
        ;;
    mysql )
        docker exec -it emkc_mysql bash -c 'mysql -hmysql -uroot -proot -Demkc'
        ;;
    rmig* )
        docker exec -it emkc bash -c "cd /opt/emkc/platform/migrations; $*"
        ;;
    tail )
        tail -f ./var/docker/logs/*
        ;;
    "" )
        echo 'emkc control, usage: emkc [command]'
        echo ''
        echo 'init          initialize env specific config files'
        echo 'start         start the emkc docker container'
        echo 'stop          stop the emkc docker container'
        echo 'shell         start a shell in the docker container'
        echo 'rebuild       rebuild emkc from scratch'
        echo 'npm           update node modules'
        echo 'mysql         login to mysql'
        echo 'rmig status   show the status of migrations'
        echo 'rmig migrate  run the pending database migrations'
        echo 'rmig rollback rollback one database migration'
        echo 'tail          watch app and db logs'
        exit 1
esac
